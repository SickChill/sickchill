[tool.poetry]
name = "sickchill"
version = "2021.4.10"
description = 'Automatic Video Library Manager for TV Shows'
license = "GPLv3"

authors = [
    "Dustyn Gibson <miigotu@gmail.com>"
]

readme = 'README.md'  # Markdown files are supported

repository = "https://github.com/sickchill/sickchill"
homepage = "https://sickchill.github.io"

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Topic :: Multimedia :: Video",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9"
]

packages = [
    { include = "sickchill" },
    { include = "SickChill.py" },
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.plugins."poetry.application.plugin"]
plugin = "poetry_date_version_plugin.plugin:VersionPlugin"

[tool.version-plugin]
write_to = 'sickchill/version.py'
regex = '__version__ = "{version}"'

[tool.flake8]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "build",
    "dist",
    "lib3"
]
inline-quotes = "double"
docstring-convention = "numpy"
ignore = [
    "C812",
    "D4",
    "D400",
    "D401",
    "D403",
    "D406",
    "D407",
    "D200",
    "D202",
    "D205",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D106",
    "S101",
    "PT009",
    "PT017"
]

max_line_length = 160
show_source = "True"
no-accept-encodings = "True"
builtins = ["_"]
#select = 'C103'

[tool.pytest.ini_options]
testpaths = ["tests", "sickchill", "SickChill.py", "setup.py"]
addopts = "--cov=sickchill --cov-report xml --no-cov-on-fail"

[tool.isort]
line_length = 160
combine_as_imports = true
order_by_type = false
remove_imports = [ "from __future__ import absolute_import", "from __future__ import print_function", "from __future__ import unicode_literals" ]
known_first_party = "sickchill"
extra_standard_library = [ "posixpath", "ntpath" ]
use_parentheses = true
src_paths = [ "sickchill", "tests", "SickChill.py", "setup.py" ]
profile = "hug"

[tool.black]
line-length = 160
target_version = ['py38']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.tox
    | \.venv
    | lib3
    | build
    | dist
  )/
)
'''

[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist = true
envlist = py38-{flake8,linux,windows}
setenv = PYTHONPATH = {toxinidir}/lib3{:}{env:PYTHONPATH:}
passenv = DEBUG VERBOSE

[testenv:py38-linux]
platform = linux
whitelist_externals = /bin/rm
envdir = {toxworkdir}/tox
setenv = PYTHONPATH = {toxinidir}/lib3{:}{env:PYTHONPATH:}
passenv = CI GITHUB_* CODECOV_TOKEN DEBUG VERBOSE
deps =
    mock
    pytest
    pytest-vcr
    pytest-cov
    codecov
commands =
    /bin/rm -f {toxinidir}/tests/sickchill.db
    /bin/rm -f {toxinidir}/tests/cache.db
    /bin/rm -f {toxinidir}/tests/failed.db
    pytest
    - codecov -e GITHUB_RUN_ID GITHUB_REF

[testenv:py38-windows]
platform = win
whitelist_externals = {env:SYSTEMROOT:C:\\Windows\\}\\System32\\cmd.exe
envdir = {toxworkdir}/tox
setenv = PYTHONPATH = {toxinidir}/lib3{:}{env:PYTHONPATH:}
passenv = CI APPVEYOR APPVEYOR_* PYTHON_ARCH DEBUG VERBOSE
deps =
    mock
    pytest
    pytest-vcr
    pytest-cov
    codecov
commands =
    cmd /c del /f /q {toxinidir}\\tests\\sickchill.db {toxinidir}\\tests\\cache.db {toxinidir}\\tests\\failed.db 2> nul
    pytest tests/
    - codecov -e APPVEYOR_REPO_BRANCH PYTHON_ARCH

[testenv:py38-flake8]
envdir = {toxworkdir}/flake8
setenv = PYTHONPATH = {toxinidir}/lib3{:}{env:PYTHONPATH:}
deps =
    flake8-coding
    isort
commands =
    flake8 --select C103 sickchill tests SickChill.py setup.py
    isort --check-only --diff sickchill tests SickChill.py setup.py

[testenv:py38-isort]
envdir = {toxworkdir}/flake8
setenv = PYTHONPATH = {toxinidir}/lib3{:}{env:PYTHONPATH:}
deps =
    flake8-coding
    isort
commands =
    flake8 --select C103 sickchill tests SickChill.py setup.py
    isort sickchill SickChill.py tests setup.py

[testenv:py38-providers]
platform = linux
whitelist_externals = /bin/rm
envdir = {toxworkdir}/tox
setenv = PYTHONPATH = {toxinidir}/lib3{:}{env:PYTHONPATH:}
passenv = CI DEBUG VERBOSE
commands =
    /bin/rm -f {toxinidir}/tests/sickchill.db
    /bin/rm -f {toxinidir}/tests/cache.db
    /bin/rm -f {toxinidir}/tests/failed.db
    pytest tests/sickchill_tests/providers/torrent/test_parsing.py
"""

[tool.poetry.dependencies]
python = ">=3.6,<4"
beautifulsoup4 = "^4.9.3"
beekeeper = "^0.9.2"
"bencode.py" = "^4.0.0"
CacheControl = "^0.12.6"
chardet = "^4.0.0"
cloudscraper = "^1.2.56"
configobj = "^5.0.6"
feedparser = "^6.0.2"
html5lib = "^1.1"
ipaddress = "^1.0.23"
Js2Py = ">=0.70,<0.72"
jsonrpclib-pelix = "^0.4.2"
kodipydent = "^0.3.1"
Mako = "^1.1.4"
markdown2 = "^2.4.0"
PyGithub = "^1.54.1"
pyOpenSSL = "^20.0.1"
python-dateutil = "^2.8.1"
python-twitter = "^3.5"
rarfile = "^4.0"
subliminal = "^2.1.0"
tmdbsimple = "^2.8.0"
tornado = "^6.1"
tvdbsimple = "^1.0.6"
Unidecode = "^1.2.0"
validators = "^0.18.2"
enzyme = "^0.4.1"
python3-fanart = "^2.0.0"
gntp = "^1.0.3"
pymediainfo = "^5.0.3"
"tus.py" = "^1.3.4"
win-inet-pton = "^1.1.0"
PyNMA = "^1.0"
"putio.py" = "^8.7.0"
profilehooks = "^1.12.0"
httplib2 = "^0.19.0"
PySocks = "^1.7.1"
imagesize = "^1.2.0"
Send2Trash = "^1.5.0"
deluge-client = "^1.9.0"
ifaddr = "^0.1.7"
twilio = "^6.55.0"
pyaes = "^1.6.1"
new-rtorrent-python = "^1.0.1-alpha.0"
qbittorrent-api = "^2021.3.18"
packaging = "^20.9"
timeago = "^1.0.15"
SQLAlchemy = "^1.4.3"
python-slugify = "^4.0.1"
guessit = "^3.3.1"
requests = "^2.25.1"
IMDbPY = ">=2020.09.25"

[tool.poetry.dev-dependencies]
coveralls = "^3.0.1"
mock = "^4.0.3"
Babel = "^2.9.0"
wheel = "^0.36.2"
pytest-vcr = "^1.0.2"
pytest-cov = "^2.11.1"
pytest-isort = "^1.3.0"
flake8-pytest-style = "^1.4.1"
flake8-commas = "^2.0.0"
flake8-quotes = "^3.2.0"
flake8-bandit = "^2.1.2"
flake8-docstrings = "^1.6.0"
flake8-coding = "^1.3.2"
flake9 = "^3.8.3"
codecov = "^2.1.11"
black = "^20.8b1"
