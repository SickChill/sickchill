name: 'Upgrade poetry and yarn dependencies'
on:
  schedule:
    - cron: '30 2 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  depends:
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        if: success() && !env.ACT
        uses: actions/checkout@v3
        with:
          ref: 'develop'
          token: ${{ secrets.PAT }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'
      - name: Restore pip cache
        if: success() && !env.ACT
        uses: actions/cache@v3
        with:
          path: $(python -m pip cache dir)
          key: ubuntu-latest-pip-3.9-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ubuntu-latest-pip-3.9-
      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: $(npm config get cache)
          key: ubuntu-latest-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ubuntu-latest-node-
      - name: Install yarn
        run: npm install -g yarn
        shell: bash
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.1
        with:
          version: 1.2.0
          virtualenvs-path: .venv
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: false
      - name: Restore poetry cache
        if: success() && !env.ACT
        uses: actions/cache@v3
        with:
          path: $(poetry config cache-dir)
          key: ubuntu-latest-poetry-3.9-${{ hashFiles('**/pyproject.toml') }}
      - name: Restore virtualenv
        if: success() && !env.ACT
        uses: actions/cache@v3
        with:
          path: .venv
          key: ubuntu-latest-virtualenv-3.9-${{ hashFiles('**/pyproject.toml') }}
      - name: Run
        run: |
          pip install poethepoet
          poe depup
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update poetry (python) and yarn (npm) dependencies
          commit_options: '--no-verify --signoff'

          file_pattern: package.json yarn.lock pyproject.toml

          # Optional commit user and author settings
          commit_user_name: miigotu
          commit_user_email: miigotu@gmail.com
          commit_author: miigotu <miigotu@gmail.com>

          push_options: '--force'
          disable_globbing: true
          # skip_fetch: true
          add_options: '-u'
