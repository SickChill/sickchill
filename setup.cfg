[metadata]
name = sickchill
description = Automatic Video Library Manager for TV Shows
long_description = file: README.md
long_description_content_type = text/markdown
url = https://sickchill.github.io
download_url = https://github.com/SickChill/SickChill
author = Dustyn Gibson
author_email = miigotu@gmail.com
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: System Administrators
    Operating System :: OS Independent
    Topic :: Multimedia :: Video
    License :: OSI Approved :: GNU General Public License v3 (GPLv3)
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9

[options]
setup_requires=
    babel
    wheel
    setuptools_scm
    nose
    rednose

tests_require =
    coveralls
    nose
    rednose
    mock
    vcrpy-unittest
    flake8-coding
    isort

python_requires = >=3.6.1

scripts =
    SickChill.py

test_suite = nose.collector

[nosetests]
detailed-errors=1
rednose=1
verbosity=3
where=tests
with-coverage=1
cover-erase=1
cover-package=sickchill
;nocapture=1
;nologcapture=1
stop=1

[flake8]
no-accept-encodings = True

[isort]
line_length = 160
combine_as_imports = true
order_by_type = false
remove_imports = from __future__ import absolute_import, from __future__ import print_function, from __future__ import unicode_literals
known_first_party = sickchill
extra_standard_library = posixpath, ntpath
use_parentheses = True
#import_heading_thirdparty = Third Party Imports
#import_heading_firstparty = First Party Imports
#import_heading_localfolder = Local Folder Imports
#import_heading_stdlib = Stdlib Imports

[extract_messages]
width = 80
charset = utf-8
output-file = sickchill/locale/messages.pot
# keywords to look for in addition to the defaults.
keywords = _n:1,2
copyright-holder = SickChill
msgid-bugs-address = miigotu@gmail.com
# place comment block with TAG (or those preceding keyword lines) in output file. Separate multiple TAGs with commas(,)
add-comments = TRANSLATORS:

[compile_catalog]
directory = sickchill/locale

[init_catalog]
output-dir = sickchill/locale
input-file = sickchill/locale/messages.pot

[update_catalog]
output-dir = sickchill/locale
input-file = sickchill/locale/messages.pot
ignore-obsolete = true
previous = true


[tox:tox]
skipsdist = true
envlist = py37-{flake8,linux,windows}
setenv = PYTHONPATH = {toxinidir}/lib3{:}{env:PYTHONPATH:}

[testenv:py37-linux]
platform = linux
whitelist_externals = /bin/rm
envdir = {toxworkdir}/tox
setenv = PYTHONPATH = {toxinidir}/lib3{:}{env:PYTHONPATH:}
passenv = CI GITHUB_* CODECOV_TOKEN
deps =
    codecov
    nose
    rednose
    mock
    vcrpy-unittest
    -rrequirements.txt
commands =
    /bin/rm -f {toxinidir}/tests/sickchill.db
    /bin/rm -f {toxinidir}/tests/cache.db
    /bin/rm -f {toxinidir}/tests/failed.db
    nosetests -c setup.cfg
    - codecov -e GITHUB_RUN_ID GITHUB_REF

[testenv:py37-windows]
platform = win
whitelist_externals = {env:SYSTEMROOT:C:\Windows\}\System32\cmd.exe
envdir = {toxworkdir}/tox
setenv = PYTHONPATH = {toxinidir}/lib3{:}{env:PYTHONPATH:}
passenv = CI APPVEYOR APPVEYOR_* PYTHON_ARCH
deps =
    codecov
    nose
    rednose
    mock
    vcrpy-unittest
    -rrequirements.txt
commands =
    cmd /c del /f /q {toxinidir}\tests\sickchill.db {toxinidir}\tests\cache.db {toxinidir}\tests\failed.db 2> nul
    nosetests -c setup.cfg
    - codecov -e APPVEYOR_REPO_BRANCH PYTHON_ARCH

[testenv:py37-flake8]
envdir = {toxworkdir}/flake8
setenv = PYTHONPATH = {toxinidir}/lib3{:}{env:PYTHONPATH:}
deps =
    flake8-coding
    isort
    -rrequirements.txt
commands =
    flake8 --select C103 sickchill tests SickChill.py setup.py
    isort --check-only --diff sickchill tests SickChill.py setup.py

[testenv:py37-isort]
envdir = {toxworkdir}/flake8
setenv = PYTHONPATH = {toxinidir}/lib3{:}{env:PYTHONPATH:}
deps =
    flake8-coding
    isort
    -rrequirements.txt
commands =
    flake8 --select C103 sickchill tests SickChill.py setup.py
    isort sickchill SickChill.py tests setup.py

[testenv:py37-providers]
platform = linux
whitelist_externals = /bin/rm
envdir = {toxworkdir}/tox
setenv = PYTHONPATH = {toxinidir}/lib3{:}{env:PYTHONPATH:}
passenv = CI
deps =
    nose
    rednose
    mock
    vcrpy-unittest
    -rrequirements.txt
commands =
    /bin/rm -f {toxinidir}/tests/sickchill.db
    /bin/rm -f {toxinidir}/tests/cache.db
    /bin/rm -f {toxinidir}/tests/failed.db
    nosetests -c setup.cfg tests/sickchill_tests/providers/torrent/parsing_tests.py

